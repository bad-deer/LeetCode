/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int c = 0;
        ListNode *head = new ListNode(0);
        ListNode *tmp1 = l1;            
        ListNode *tmp2 = l2;
        ListNode *tmp3 = head;
        ListNode *pre = head;
        while(tmp1 != NULL && tmp2 != NULL)             //assume list 1 & 2 have the same length;
        {
            tmp3->val = (tmp1->val + tmp2->val + c) % 10;
            c = (tmp1->val + tmp2->val + c) / 10;
            ListNode *next = new ListNode(0);
            tmp3->next = next;
        
            tmp1 = tmp1->next;
            tmp2 = tmp2->next;
            pre = tmp3;
            tmp3 = tmp3->next;
        }
        while(tmp1 != NULL)
        {
            tmp3->val = (tmp1->val + c) % 10;
            c = (tmp1->val + c) / 10;
            ListNode *next = new ListNode(0);
            tmp3->next = next;
        
            tmp1 = tmp1->next;
            pre = tmp3;
            tmp3 = tmp3->next;
        }
        while(tmp2 != NULL)
        {
            tmp3->val = (tmp2->val + c) % 10;
            c = (tmp2->val + c) / 10;
            ListNode *next = new ListNode(0);
            tmp3->next = next;
            
            tmp2 = tmp2->next;
            pre = tmp3;
            tmp3 = tmp3->next;
        }
        tmp3->val = c;
        if(tmp3->val == 0)
        {
            pre->next = NULL;
            delete tmp3;
        }
        return head;
    }
};
