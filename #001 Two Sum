/* problem description
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
UPDATE (2016/2/13):
The return format had been changed to zero-based indices. Please read the above updated description carefully.

Subscribe to see which companies asked this question

result: 
  run time: 493 ms
  ranking : 27%
 */

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> twoSum;
        int i, j;
        for(i = 0; i < nums.size(); ++i)
        {
            for(j = nums.size() - 1; j > i; --j)
            {
                if(nums[i] + nums[j] == target)
                {
                    break;
                }
            }
            if(j != i)
                break;
        }
        twoSum.push_back(i);
        twoSum.push_back(j);
                    
        return twoSum;
    }
    
};

